#!/bin/sh
#
# rc.ufw.install_to_emmc
#
# part of pfSense (https://www.pfsense.org)
# Copyright (c) 2004-2016 Rubicon Communications, LLC (Netgate)
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# make sure the user can't kill us by pressing Ctrl-C,
# ctrl-z, etc.
trap : 2
trap : 3
trap : 4

read -p "This operation will erase the eMMC, do you want to continue ? (y/N) " confirm
case "${confirm}" in
[Yy] | [Yy][Ee] | [Yy][Ee][Ss])
	break
	;;
*)
	echo exiting.
	exit 0
esac

# Find the eMMC device
for DEV in mmcsd0 mmcsd1
do
	MMCHC=$(/sbin/geom disk list ${DEV} 2> /dev/null | /usr/bin/grep MMCHC)
	if [ -n "${MMCHC}" ]; then
		MMCDEV=${DEV}
		break;
	fi
done
if [ -z "${MMCHC}" ]; then
	echo
	echo "no eMMC device detected.  aborting."
	sleep 5
	exit 1
fi

echo "Erasing eMMC..."
/bin/dd if=/dev/zero of=/dev/${MMCDEV} bs=64k count=800

# Found available label for EMMCBOOT
idx=0
while [ -e "/dev/msdosfs/EMMCBOOT${idx}" ]; do
	idx=$((idx+1))
done
EMMCBOOT_LABEL="EMMCBOOT${idx}"

# Found available label for /
idx=0
while [ -e "/dev/ufs/pfSense${idx}" ]; do
	idx=$((idx+1))
done
PFSENSE_LABEL="pfSense${idx}"

echo "Creating FAT32 boot partition on eMMC"
/sbin/gpart create -s MBR ${MMCDEV}
/sbin/gpart add -a 63 -s 35006k -t '!12' ${MMCDEV}
/sbin/gpart set -a active -i 1 ${MMCDEV}
/sbin/newfs_msdos -L ${EMMCBOOT_LABEL} -c 1 -F 32 /dev/${MMCDEV}s1

echo "Creating pfSense partition on eMMC"
/sbin/gpart add -t freebsd ${MMCDEV}
/sbin/gpart create -s BSD ${MMCDEV}s2
/sbin/gpart add -t freebsd-ufs -a 2m ${MMCDEV}s2
/sbin/newfs -UjE -L ${PFSENSE_LABEL} /dev/${MMCDEV}s2a

echo "Mounting chroot environment"
/sbin/mount /dev/ufs/${PFSENSE_LABEL} /mnt
if [ $? -ne 0 ]; then
	echo "ERROR! Impossible to mount /mnt"
	exit 1
fi
mkdir -p /mnt/boot/msdos
/sbin/mount_msdosfs /dev/msdosfs/${EMMCBOOT_LABEL} /mnt/boot/msdos
if [ $? -ne 0 ]; then
	umount /mnt
	echo "ERROR! Impossible to mount /mnt/boot/msdos"
	exit 1
fi

echo
echo "Copying the system from SD to eMMC"

/usr/bin/tar -cf - -C / \
	--exclude usr/src \
	--exclude usr/ports \
	--exclude usr/obj \
	--exclude 'usr/swap*' \
	--exclude mnt \
	--exclude .sujournal \
	--exclude var/run \
	--exclude dev \
	--exclude tmp \
	. \
| /usr/bin/tar -xf - -C /mnt

echo
echo "Cleaning up the copied system"
# Reset permissions, ensure the required directories
(cd /mnt ; mtree -Uief /etc/mtree/BSD.root.dist)
(cd /mnt/usr ; mtree -Uief /etc/mtree/BSD.usr.dist)
(cd /mnt/usr/include ; mtree -Uief /etc/mtree/BSD.include.dist)
(cd /mnt/var ; mtree -Uief /etc/mtree/BSD.var.dist)
# Remove existing SSH host keys
rm -f /mnt/etc/ssh/*key*

# Fix fstab
sed -i '' \
	-e "/[[:blank:]]\/boot\/msdos[[:blank:]]/ s,^/dev/[^[:blank:]]*,/dev/msdosfs/${EMMCBOOT_LABEL}," \
	-e "/[[:blank:]]\/[[:blank:]]/ s,^/dev/[^[:blank:]]*,/dev/ufs/${PFSENSE_LABEL}," \
	/mnt/etc/fstab

umount /mnt/boot/msdos
umount /mnt
sync ; sync ; sync

echo
echo "System copied."
echo
echo "To reboot from eMMC:"
echo " * Clean shutdown: halt system (option 6)"
echo " * Remove the power"
echo " * Remove the boot device"
echo " * Reapply power (do NOT close the SD boot jumper)"
echo
echo
